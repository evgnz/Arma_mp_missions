#include "cfgInventory.hpp"
#define AUTHOR_TXT 	localize "STR_author"
#define BRIEF_TXT 	localize "STR_missionName"
#define MISS_NAME 	localize "STR_missionName"
#define LOAD_TXT  	localize "STR_overview_text"
#define LOAD_IMG_W 	width="500"
#define LOAD_IMG_H 	height="260"
#define LOAD_IMG   	"\a3\ui_f\data\GUI\Rsc\RscDisplayWelcome\welcome_nexus3_ca.paa"
#define PREV_IMG_0 	"\a3\ui_f\data\GUI\Rsc\RscDisplayWelcome\welcome3_ca.paa"
#define PREV_IMG_1 	"\a3\ui_f\data\GUI\cfg\LoadingScreens\gc_wallpaper_16_co.paa"
#define PREV_IMG_2 	"\a3\ui_f\data\GUI\cfg\LoadingScreens\gc_wallpaper_17_co.paa"

class Header {
  gameType   = LastMan;
  minPlayers = 1;
  maxPlayers = 20;
};

author          = __EVAL(AUTHOR_TXT);
briefingName    = __EVAL(BRIEF_TXT);
onLoadName 			= __EVAL(MISS_NAME);
onLoadMission   = __EVAL(LOAD_TXT);
overviewText    = __EVAL(LOAD_TXT);
overViewPicture = __EVAL(selectRandom [LOAD_IMG, PREV_IMG_0, PREV_IMG_1, PREV_IMG_2]);
loadScreen      = LOAD_IMG; LOAD_IMG_W; LOAD_IMG_H;
saving          = 0;
disabledAI      = 1;
respawn 				= 3;
respawnDelay 		= 5;
respawnOnStart 	= 1;
minScore 				= 0;
avgScore 				= 100;
maxScore 				= 500;

respawnTemplates[] = {"MenuInventory", "MenuPosition", "Tickets", "Spectator"};
disableRandomization[] = {"AllVehicles"};

class CfgDebriefing {
  class End1 {
    title 			  		= $STR_mission_completed;
    description 	  	= "";
    subtitle 		  		= "";
    picture 		  		= "\a3\ui_f\data\gui\cfg\Hints\commanding_ca.paa";
    pictureColor[] 	  = {1,1,1,1};
    pictureBackground = "\a3\ui_f\data\gui\cfg\LoadingScreens\gc_wallpaper_17_co.paa";
  };

  class End2 {
    title 			  		= $STR_mission_failed;
    description 	  	= "";
    subtitle 		  		= $STR_all_dead;
    picture 		  		= "\a3\ui_f\data\gui\cfg\Debriefing\enddeath_ca.paa";
    pictureColor[] 	  = {1,1,1,1};
    pictureBackground = "\a3\ui_f\data\gui\cfg\LoadingScreens\gc_wallpaper_17_co.paa";
  };

  class End3 {
    title 			  		= $STR_mission_failed;
    description 	  	= "";
    subtitle 		  		= $STR_base_captured;
    picture 		  		= "\a3\ui_f\data\gui\cfg\Debriefing\enddefault_ca.paa";
    pictureColor[] 	  = {1,1,1,1};
    pictureBackground = "\a3\ui_f\data\gui\cfg\LoadingScreens\gc_wallpaper_17_co.paa";
  };

  class End4 {
    title 			  		= $STR_mission_completed;
    description 	  	= "";
    subtitle 		  		= $STR_rtb;
    picture 		  		= "\a3\ui_f\data\gui\cfg\Hints\competitiverules_ca.paa";
    pictureColor[] 	  = {1,1,1,1};
    pictureBackground = "\a3\ui_f\data\gui\cfg\LoadingScreens\gc_wallpaper_17_co.paa";
  };
};

titleParam1 = $STR_param_dummyText;
valuesParam1[] = {0};
textsParam1[] = {$STR_A3_MissionDefault};

titleParam2 = $STR_param_MissionSettings;
valuesParam2[] = {0};
textsParam2[] = {"Â  "};

class Params {
  #include "missionParams.hpp"
};

class CfgHints {
  class Support {
    displayName = "Support requester";
    class CallSupport {
      displayName      = $STR_JTAC_unit;
      displayNameShort = "";
      description      = $STR_sup_info_1;
      tip              = $STR_sup_info_2;
      arguments[]      = {profileName,{{0x0B}},{{0x09}}};
      image            = "\a3\ui_f\data\gui\cfg\Hints\callsupport_ca.paa";
      noImage          = false;
    };
  };
};

class CfgPostprocessTemplates {
  class introPPTemplate {
    displayName = "SL_introTemplate";
    colorCorrections[] = {1, 0.65, 0, {1, 1, 1, 0.05}, {0.8, 0.8, 0.8, 0.5}, {1, 1, 1, 1.0}};
    filmGrain[] = {0.75, 1, 1.25, 0, 1};
  };
};

class CfgCommunicationMenu {
  class supplyDrop {
    text= $STR_supplyCall;
    submenu			= "";
    expression 	= "_this remoteExec ['SL_fnc_addSupply', 2]";
    icon 	   		= "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\supplydrop_ca.paa";
    cursor			= "\a3\Ui_f\data\IGUI\Cfg\Cursors\freelook_ca.paa";
    enable			= "1";
    removeAfterExpressionCall = 1;
  };
  class fireMission {
      text				= $STR_artyCall;
      submenu    	= "";
      expression 	= "_this call SL_fnc_addArty";
      icon 	   		= "\a3\ui_f\data\GUI\Cfg\CommunicationMenu\artillery_ca.paa";
      cursor 	   	= "\a3\Ui_f\data\IGUI\Cfg\Cursors\me_ca.paa";
      enable 	   	= "1";
      removeAfterExpressionCall = 0;
  };
  class casPlane {
      text				= $STR_B_Plane_CAS_01;
      submenu    	= "";
      expression 	= "_this remoteExec ['SL_fnc_addCAS', 2]";
      icon				= "\a3\ui_f\data\GUI\Cfg\CommunicationMenu\cas_ca.paa";
      cursor 	   	= "\a3\Ui_f\data\IGUI\Cfg\Cursors\iconCursorSupport_ca.paa";
      enable 	   	= "1";
      removeAfterExpressionCall = 1;
  };
  class casHeli {
      text				= $STR_casHeli;
      submenu    	= "";
      expression 	= "_this remoteExec ['SL_fnc_addCasHeli', 2]";
      icon 	   		= "\a3\ui_f\data\GUI\Cfg\CommunicationMenu\casheli_ca.paa";
      cursor 	   	= "\a3\Ui_f\data\IGUI\Cfg\Cursors\iconCursorSupport_ca.paa";
      enable 	   	= "1";
      removeAfterExpressionCall = 1;
  };
  class evacHelo {
    text 	   		= $STR_evacCall;
    submenu    	= "";
    expression 	= "GVAR_evac = 1; publicVariable 'GVAR_evac'; [] remoteExec ['SL_fnc_evac', 2];";
    icon 	   		= "\a3\Ui_f\data\GUI\Cfg\CommunicationMenu\transport_ca.paa";
    cursor 	   	= "\a3\Ui_f\data\IGUI\Cfg\Cursors\iconCursorSupport_ca.paa";
    enable 	   	= "1";
    removeAfterExpressionCall = 1;
  };
};

class CfgFunctions {
  class SL {
    class KEKFunctions {
      file ="functions";
      class evac {};
      class raid {};
      class intro {};
      class addCAS {};
      class static {};
      class flares {};
      class addTask {};
      class cleanUp {};
      class addArty {};
      class unitInit {};
      class coverMap {};
      class skipTime {};
      class earPlugs {};
      class typeTextX {};
      class lastStand {};
      class playMusic {};
      class drawIcons {};
      class addSupply {};
      class suppCrate {};
      class taskAttack {};
      class handleUnit {};
      class endMission {};
      class nearTarget {};
      class addSupport {};
      class addCasHeli {};
      class initMission {};
      class fireSupport {};
      class missionOutro {};
      class resetTickets {};
      class moduleSector {};
      class splendidShot {};
      class initInventory {};
      class conversations {};
      class sectorCaptured {};
      class supportProvider {};
      class respawnInventory {};
      class createVehicleCrew {};
      class respawnInventoryAdd {};
      class respawnPositionAdd {};
    };
  };
};

ReviveMode											= 1;   // 0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode     	= 1;   // 0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait            	= 1;   // 0: none, 1: medic trait is required
ReviveRequiredItems            	= 2;   // 0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed 	= 1;   // 0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay                    	= 15;  // Time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier     	= 2;   // Speed multiplier for revive performed by medic
ReviveForceRespawnDelay        	= 2;   // Time needed to perform force respawn (in secs)
ReviveBleedOutDelay            	= 300; // Unconscious state duration (in secs)

corpseManagerMode              	= 0;   // Type of removed bodies: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
corpseLimit                    	= 0;   // Max number of bodies which can be available at the same time. When exceeded, start deleting immediately.
corpseRemovalMinTime           	= 0;   // Minimal time in seconds a body stays in the scene (can't be removed sooner).
corpseRemovalMaxTime           	= 0;   // Maximal time in seconds after which a dead body is removed (can't stay longer)

wreckManagerMode               	= 0;   // Type of removed wrecks: 0 - none, 1 - all, 2 - only respawnable, 3 - only non-respawnable
wreckLimit                     	= 0;   // Max number of wrecks which can be available at the same time. When exceeded, start deleting immediately.
wreckRemovalMinTime            	= 0;   // Minimal time in seconds a wreck stays in the scene (can't be removed sooner).
wreckRemovalMaxTime            	= 0;   // Maximal time in seconds after which a wreck is removed (can't stay longer)
